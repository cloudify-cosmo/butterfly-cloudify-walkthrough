## This is an inputs file for the aws-ec2-blueprint.yaml. Many of these inputs have default values in the blueprint itself.
## However, there are some that have no defaults and you will need to fill them out with your own values, i.e. your credentials.

## You need to provide these. There's no way I can know the default values.
aws_access_key_id:
aws_secret_access_key:

## You also need to provide this. There's a good chance that us-east-1 will work for you, so I provided a default.
ec2_region_name: eu-west-1
## Especially because I know the AMIs below work in us-east-1.
application_server_image_id: ami-b265c7c1
application_server_instance_type: m3.medium

## The following values have default values, but if you want to use an existing Instance,
## Security Group or IP or Keypair, I've exposed them as inputs for you.
# use_existing_security_group_for_database: false
# database_security_group_id: ''
# use_existing_security_group_for_application: false
# application_security_group_id: ''
# use_existing_keypair: false
# keypair_name: cfy_local_keypair
# ssh_key_filename: ~/.ssh/cfy_local_keypair.pem
# use_existing_server_for_database: false
# database_server_id: ''
# use_existing_server_for_application: false
# application_server_id: ''
# use_existing_ip_for_database: false
# database_server_ip: ''
# use_existing_ip_for_application: false
# application_server_ip: ''

## If you will change these in the application-blueprint.yaml, and in the tasks.py, then you should change these.
## Most likely, not going to be the first thing you consider changing.
# application_port: 8080.

# If you are using AWS or Openstack, you'll want to replace these with the outputs of the `cfy local outputs` command.
## This is the last output after running the infrastructure install workflow.
# tutorial_host_ip: 52.49.184.147
# tutorial_host_public_key_path: ~/.ssh/cfy_local_keypair.pem

## This really depends on your local linux system or on your Openstack image or AWS AMI:
# nodejs_host_user_agent: centos

## You may have changed these in your inputs to Openstack/AWS blueprint.
# application_server_port: 8088

## If you want to use something other than nodecellar, that's an option here.
# application_tarball_url: https://github.com/cloudify-cosmo/nodecellar/archive/master.tar.gz
# application_start_up_script: server.js
